{"version":3,"sources":["assets\\scripts\\ui\\UIBase.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAAiC;AAG3B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAoC,0BAAY;IAU5C;QAAA,YACI,iBAAO,SACV;QATD,cAAQ,GAAY,IAAI,CAAC;QAGzB,aAAO,GAAY,IAAI,CAAC;QAEd,aAAO,GAAW,IAAI,CAAC;;IAIjC,CAAC;IAED,uBAAM,GAAN;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAED,0BAAS,GAAT;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAES,2BAAU,GAApB,cAA8B,CAAC;IAErB,iCAAgB,GAA1B,cAAoC,CAAC;IAE3B,oCAAmB,GAA7B,cAAuC,CAAC;IAEjC,qBAAI,GAAX,UAAY,QAAkC;QAC1C,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,QAAQ,EAAE;YACV,QAAQ,CAAC,IAAI,CAAC,CAAC;SAClB;IACL,CAAC;IAEM,qBAAI,GAAX,UAAY,QAAkC;QAC1C,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACzB,QAAQ,CAAC,IAAI,CAAC,CAAC;SAClB;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAC5B;IACL,CAAC;IAES,sBAAK,GAAf;QACI,SAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAES,6BAAY,GAAtB;QACI,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAhDD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;4CACO;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;2CACM;IANP,MAAM;QAD1B,OAAO;OACa,MAAM,CAoD1B;IAAD,aAAC;CApDD,AAoDC,CApDmC,EAAE,CAAC,SAAS,GAoD/C;kBApDoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["import { App } from \"../app/App\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIBase extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    nodeMask: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeBox: cc.Node = null;\r\n\r\n    protected _uiName: string = null;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onLoad() {\r\n        this.addUIEvent();\r\n        this.addEventListener();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.removeEventListener();\r\n    }\r\n\r\n    protected addUIEvent(): void {}\r\n\r\n    protected addEventListener(): void {}\r\n\r\n    protected removeEventListener(): void {}\r\n\r\n    public show(afterAni: (uiBase: UIBase) => void): void {\r\n        this.node.active = true;\r\n        if (afterAni) {\r\n            afterAni(this);\r\n        }\r\n    }\r\n\r\n    public hide(afterAni: (uiBase: UIBase) => void): void {\r\n        if (afterAni) {\r\n            this.node.active = false;\r\n            afterAni(this);\r\n        } else {\r\n            this.node.active = false;\r\n        }\r\n    }\r\n\r\n    protected close(): void {\r\n        App.uiMgr.closeUI(this._uiName);\r\n    }\r\n\r\n    protected onCloseClick(): void {\r\n        this.close();\r\n    }\r\n}"]}