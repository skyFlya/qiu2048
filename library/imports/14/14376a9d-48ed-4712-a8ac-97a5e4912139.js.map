{"version":3,"sources":["assets\\scripts\\mgrs\\UIMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { App } from \"../app/App\";\r\nimport { EventIDCfg } from \"../cfg/EventIDCfg\";\r\nimport UIBase from \"../ui/UIBase\";\r\nimport { EventMgr } from \"./EventMgr\";\r\n\r\n\r\nexport class UIMgr {\r\n    private static _instance: UIMgr = null;\r\n    private static _loadingId: number = 0;\r\n    private static _curDisplayId: number = 0;\r\n    private _loadingIds: Array<number> = [];\r\n    private _nodeList: Object = cc.js.createMap();\r\n    private _waittingDisplayList: Array<any> = [];\r\n    private _curDisplay: any = null;\r\n    private _uiList: Array<UIBase> = [];\r\n    private _openUINameList: Array<string> = [];\r\n\r\n    public static getInstance(): UIMgr {\r\n        if (UIMgr._instance == null) {\r\n            UIMgr._instance = new UIMgr();\r\n        }\r\n        return UIMgr._instance;\r\n    }\r\n\r\n    public static destroyInstance():void {\r\n        if (UIMgr._instance) {\r\n            UIMgr._instance = null;\r\n        }\r\n    }\r\n\r\n    public openUI(name: string, callback?: (uiBase: UIBase) => void): void {\r\n        const cfg = App.uiCfgMgr.getCfg(name);\r\n        if (!cfg) {\r\n            cc.error('未配置：' + name);\r\n            return;\r\n        }\r\n        let displayId = 0;\r\n        if (this._nodeList[name] && cc.isValid(this._nodeList[name])) {\r\n            this._openUINameList.push(name);\r\n            if (cfg.needWait) {\r\n                if (this._curDisplay == null) {\r\n                    displayId = ++UIMgr._curDisplayId;\r\n                    this._curDisplay = {\r\n                        name: name,\r\n                        callback: callback\r\n                    }\r\n                    this.showUI(name, callback, displayId);\r\n                } else {\r\n                    if (this._curDisplay.name == name) {\r\n                        cc.error('重复显示：' + name);\r\n                        return;\r\n                    }\r\n                    for (let i = 0; i < this._waittingDisplayList.length; i++) {\r\n                        if (this._waittingDisplayList[i].name == name) {\r\n                            cc.error('重复显示：' + name);\r\n                            return;\r\n                        }\r\n                    }\r\n                    this._waittingDisplayList.push({\r\n                        name: name,\r\n                        callback: callback\r\n                    });\r\n                }\r\n            } else {\r\n                this.showUI(name, callback, displayId);\r\n            }\r\n        } else {\r\n            // 加载资源\r\n            if (cfg.preloadRes && cfg.preloadRes.length > 0) {\r\n                this._openUINameList.push(name);\r\n                if (cfg.needWait) {\r\n                    if (this._curDisplay == null) {\r\n                        displayId = ++UIMgr._curDisplayId;\r\n                        this._curDisplay = {\r\n                            name: name,\r\n                            callback: callback\r\n                        }\r\n                    } else {\r\n                        if (this._curDisplay.name == name) {\r\n                            cc.error('重复显示：' + name);\r\n                            return;\r\n                        }\r\n                        for (let i = 0; i < this._waittingDisplayList.length; i++) {\r\n                            if (this._waittingDisplayList[i].name == name) {\r\n                                cc.error('重复显示：' + name);\r\n                                return;\r\n                            }\r\n                        }\r\n                        this._waittingDisplayList.push({\r\n                            name: name,\r\n                            callback: callback\r\n                        });\r\n                    }\r\n                }\r\n                this.loadRes(name, callback, displayId);\r\n            } else {\r\n                cc.error('未配置资源：' + name);\r\n            }\r\n        }\r\n    }\r\n\r\n    public closeUI(name: string, isDestroy: boolean = false, callback?: (uiBase: UIBase) => void): void {\r\n        const cfg = App.uiCfgMgr.getCfg(name);\r\n        if (!cfg) {\r\n            cc.error('未配置' + cfg);\r\n            return;\r\n        }\r\n        const idx = this._openUINameList.indexOf(name);\r\n        if (-1 != idx) {\r\n            this._openUINameList.splice(idx, 1);\r\n        }\r\n\r\n        let isExits: boolean = false;\r\n        if (cfg.needWait) {\r\n            if (this._curDisplay && this._curDisplay.name == name) {\r\n                this._curDisplay = null;\r\n                isExits = true;\r\n            }\r\n            for (let i = 0; i < this._waittingDisplayList.length; i++) {\r\n                if (this._waittingDisplayList[i].name == name) {\r\n                    this._waittingDisplayList.splice(i, 1);\r\n                    isExits = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const node: cc.Node = this._nodeList[name];\r\n        if (node) {\r\n            const uiBase: UIBase = node.getComponent(UIBase);\r\n            const idx = this._uiList.indexOf(uiBase);\r\n            if (isDestroy) {\r\n                this._nodeList[name] = null;\r\n            }\r\n            if (idx != -1) {\r\n                this._uiList.splice(idx, 1);\r\n                uiBase.hide(()=>{\r\n                    if (isDestroy) {\r\n                        node.removeFromParent();\r\n                        node.destroy();\r\n                    }\r\n                    this.closeAndShowNext(uiBase, name, cfg.needWait, callback);\r\n                });\r\n            } else {\r\n                this.closeAndShowNext(null, name, cfg.needWait, callback);\r\n            }\r\n        } else if (isExits) {\r\n            this.closeAndShowNext(null, name, cfg.needWait, callback);\r\n        }\r\n    }\r\n\r\n    public findUI(name: string): UIBase {\r\n        const node: cc.Node = this._nodeList[name];\r\n        if (node) {\r\n            const uiBase: UIBase = node.getComponent(UIBase);\r\n            const idx = this._uiList.indexOf(uiBase);\r\n            if (idx != -1) {\r\n                return uiBase\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private showUI(name: string, callback: (uiBase: UIBase) => void, displayId: number): void {\r\n        const cfg = App.uiCfgMgr.getCfg(name);\r\n        if (!cfg) {\r\n            cc.error('未配置' + cfg);\r\n            return;\r\n        }\r\n        if (-1 == this._openUINameList.indexOf(name)) {\r\n            return;\r\n        }\r\n\r\n        if (cfg.needWait) {\r\n            if (!this._curDisplay || displayId != UIMgr._curDisplayId) {\r\n                return;\r\n            }\r\n        }\r\n        cc.log(\"show \" + name);\r\n        \r\n        const uiBase: UIBase = this._nodeList[name].getComponent(UIBase);\r\n        const idx = this._uiList.indexOf(uiBase);\r\n        if (idx != -1) {\r\n            this._uiList.splice(idx, 1);\r\n        }\r\n        this._uiList.push(uiBase);\r\n        uiBase.node.parent = cc.find(\"Canvas/UIRoot\");\r\n        uiBase.node.zIndex = cfg.zIndex;\r\n        uiBase.show(()=>{});\r\n        callback && callback(uiBase);\r\n        EventMgr.emit(EventIDCfg.PANNLE_SHOW, {name: name});\r\n    }\r\n\r\n    private closeAndShowNext(uiBase: UIBase, name: string, tryShowNext: boolean, callback: (uiBase: UIBase) => void): void {\r\n        callback && callback(uiBase);\r\n        EventMgr.emit(EventIDCfg.PANNEL_CLOSE, {name: name});\r\n        tryShowNext && this.tryShowNextUI();\r\n    }\r\n\r\n    private tryShowNextUI(): void {\r\n        if (this._curDisplay == null && this._waittingDisplayList.length > 0) {\r\n            const cfg = this._waittingDisplayList.shift();\r\n            const displayId = ++UIMgr._curDisplayId;\r\n            this._curDisplay = {\r\n                name: cfg.name,\r\n                callback: cfg.callback\r\n            }\r\n            if (this._nodeList[cfg.name] && cc.isValid(this._nodeList[cfg.name])) {\r\n                this.showUI(this._curDisplay.name, this._curDisplay.callback, displayId);\r\n            } else {\r\n                // 加载\r\n                this.loadRes(cfg.name, cfg.callback, displayId);\r\n            }\r\n        }\r\n    }\r\n\r\n    private loadRes(name: string, callback: (uiBase: UIBase) => void, displayId: number): void {\r\n        const cfg = App.uiCfgMgr.getCfg(name);\r\n        if (!cfg) {\r\n            cc.error('未配置：' + name);\r\n            return;\r\n        }\r\n        const id = ++UIMgr._loadingId;\r\n        this._loadingIds.push(id);\r\n        const length = cfg.preloadRes.length;\r\n        let loaded: number = 0;\r\n        let isLoadedError: boolean = false;\r\n        for (let i = 0; i < length; i++) {\r\n            cc.loader.loadRes(cfg.preloadRes[i].url, cfg.preloadRes[i].type, (error: Error, res: any)=>{\r\n                if (error) {\r\n                    isLoadedError = true;\r\n                    cc.error(error.message || error);\r\n                } \r\n                loaded++;\r\n                if (loaded == length) {\r\n                    const idx = this._loadingIds.indexOf(id);\r\n                    if (idx != -1) {\r\n                        this._loadingIds.splice(idx, 1);\r\n                        if (!isLoadedError) {\r\n                            if (!this._nodeList[name] || !cc.isValid(this._nodeList[name])) {\r\n                                const prefab: cc.Prefab = cc.loader.getRes(cfg.ui, cc.Prefab);\r\n                                this._nodeList[name] = cc.instantiate(prefab);\r\n                            }\r\n                            if (-1 == this._openUINameList.indexOf(name)) {\r\n                                return;\r\n                            }\r\n                            this.showUI(name, callback, displayId);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        const uiRoot = cc.find(\"Canvas/UIRoot\");\r\n        if (uiRoot) {\r\n            uiRoot.removeAllChildren();\r\n        }\r\n        this._loadingIds = [];\r\n        this._nodeList = cc.js.createMap();\r\n        this._waittingDisplayList = [];\r\n        this._curDisplay = null;\r\n        this._uiList = [];\r\n        this._openUINameList = [];\r\n    }\r\n\r\n    /**\r\n     * 是否已经打开\r\n     * @param name \r\n     */\r\n    private isOpend(name: string): boolean {\r\n        const idx = this._openUINameList.indexOf(name);\r\n        if (-1 != idx) {\r\n            return true;\r\n        }\r\n        if (this._curDisplay && this._curDisplay.name == name) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 是否等待打开\r\n     */\r\n     private isWaittingOpen(name: string): boolean {\r\n        for (let i = 0; i < this._waittingDisplayList.length; i++) {\r\n            if (this._waittingDisplayList[i].name == name) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public isOpenedOrWaittingOpen(name: string): boolean {\r\n        return this.isOpend(name) || this.isWaittingOpen(name);\r\n    }\r\n\r\n}"]}