{"version":3,"sources":["assets\\scripts\\platform\\HttpClient.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { objectUtils } from \"../utils/object-utils\";\nimport { Config } from \"./Config\";\nimport { HttpUrlConfig } from \"./HttpUrl\";\n\nexport enum HttpErrorType {\n    /**错误的Url地方 */\n    UrlError,\n    /**超时 */\n    TimeOut,\n    /**请求错误 */\n    RequestError,\n    /**请求终止 */\n    Abort,\n\n}\n/**网络类型 */\nexport enum NetworkType {\n    NETWORK_ETHERNET = 'NETWORK_ETHERNET',\n    NETWORK_WIFI = 'NETWORK_WIFI',\n    NETWORK_4G = '4G',\n    NETWORK_3G = '3G',\n    NETWORK_2G = '2G',\n    NETWORK_UNKNOWN = 'UNKNOWN',\n    /**无网络 */\n    NETWORK_NO = ''\n}\nexport interface HttpError {\n    type: HttpErrorType,\n    reason: any\n}\n\nlet httpHost = \"http://composite.qufenqian-webgame.web-application.gz.vipc.me\"\n\nexport class httpClient {\n    private static _instance: httpClient = null;\n    public static getInstance(): httpClient {\n        if (httpClient._instance == null) {\n            httpClient._instance = new httpClient();\n        }\n        return httpClient._instance;\n    }\n\n    public static destroyInstance(): void {\n        if (httpClient._instance) {\n            httpClient._instance = null;\n        }\n    }\n\n\n    public httpPost(url: HttpUrlConfig,\n        fData = {},\n        callback: | {\n            success?: Function,\n            timeOut?: Function,\n            fail?: Function,\n            final?: Function,\n        } | Function,\n        reConneted: boolean = true) {\n\n        const { success, fail, final, timeOut } = <any>((typeof callback == \"function\" && ((<any>callback) = { click: callback })) || callback);\n        const param = { url: url.url, param: fData }\n\n        const now = Date.now();\n        let finalData = Config.PHEAD;\n        Object.assign(Config.PHEAD, fData);\n        const finalurl = httpHost + url.url;\n        cc.log(\"网页请求->>\", param)\n        this.request(finalurl, finalData,\n            _success => {                \n                if (_success && _success.statuscode === 0) {\n                    success && success(_success.data);\n                    final && final(_success);\n                } else {\n                    fail && fail(_success);\n                    final && final(_success);\n                }\n                cc.log(\"网页请求<<-\", param, objectUtils.cloneObject(_success))\n            },\n            _fail => {                \n                fail && fail(_fail);\n                final && final(_fail);\n                cc.log(\"网页请求<<-\", param, _fail)\n            },\n            _timeOut => {                \n                timeOut && timeOut(_timeOut);\n                final && final(_timeOut);\n\n            },\n            reConneted\n        )\n    }\n\n    /**cocos自带http */\n    private request(url: string, body, _success: (data: any) => void, _fail?: (errorData: HttpError) => void, _timeOut?: (errorData: HttpError) => void, reConneted: boolean = true) {\n        const xhr = new XMLHttpRequest();\n        let timer = setTimeout(() => {\n            //Manager.wait.show(url)\n        }, 3 * 1000);\n        const clearTimer = () => {\n            clearTimeout(timer);\n            //Manager.wait.hide(url)\n        }\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState == 4) {\n                clearTimer();\n                if (xhr.status >= 200 && xhr.status < 400) {\n                    let res = JSON.parse(xhr.responseText);\n                    _success(res);\n                } else {\n                    if (xhr.responseText) {\n                        let res = JSON.parse(xhr.responseText);\n                        _fail(res);\n                    } else {\n                        _fail({ type: HttpErrorType.RequestError, reason: \"状态异常\" });\n                    }\n                }\n            }\n\n        };\n\n        xhr.onabort = (e) => {\n            clearTimer();\n            console.log(e)\n            try {\n                if (_fail) _fail({ type: HttpErrorType.Abort, reason: '请求被中止' });\n            } catch (error) {\n                error(error)\n            }\n        };\n\n        xhr.ontimeout = (e) => {\n            clearTimer();\n            xhr.abort();//网络超时，断开连接\n            // if (reConneted)\n            //     Manager.reConneted.show(() => this.request(url, body, _success, _fail, _timeOut, reConneted))\n            if (CC_DEBUG) console.warn(`request timeout : ${url}`);\n            try {\n                if (_timeOut) _timeOut({ type: HttpErrorType.TimeOut, reason: \"连接超时\" });\n            } catch (error) {\n                error(error)\n            }\n\n        };\n        xhr.onerror = (e) => {\n            clearTimer();\n\n            console.error(`request error : ${url} `);\n            // if (reConneted)\n            //     Manager.reConneted.show(() => this.request(url, body, _success, _fail, _timeOut, reConneted))\n            try {\n                if (_fail) _fail({ type: HttpErrorType.RequestError, reason: \"请求错误\" });\n            } catch (error) {\n                error(error);\n            }\n        };\n        \n        xhr.open(\"POST\", url);\n        xhr.timeout = 10 * 1000; //超时10秒\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=utf-8\");\n        xhr.send(JSON.stringify(body));\n\n    }\n\n}\n\n"]}