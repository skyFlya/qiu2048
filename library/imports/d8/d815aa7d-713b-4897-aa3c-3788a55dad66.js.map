{"version":3,"sources":["assets\\scripts\\saveManager\\SaveManager.ts"],"names":[],"mappings":";;;;;AACA;;GAEG;;;AAGH,sDAAoD;AACpD,+BAA6C;AAQ7C;IAAA;IAuEA,CAAC;IArEiB,oBAAQ,GAAtB,cAA2B,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;IAEpF,0BAAI,GAAX;QACI,MAAM;QACN,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAA;QACrB,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAA;QACpE,IAAI,IAAI,CAAC,OAAO,CAAC,WAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;YACtC,wBAAwB;YACxB,yBAAyB;YACzB,0DAA0D;YAC1D,4CAA4C;YAC5C,QAAQ;YACR,QAAQ;YACR,IAAI,CAAC,SAAS,EAAE;gBACZ,EAAE,CAAC,GAAG,CAAC,yCAAyC,EAAE,IAAI,CAAC,CAAC;gBACxD,uCAAuC;gBACvC,sCAAsC;gBACtC,sCAAsC;gBACtC,iDAAiD;aACpD;SACJ;IACL,CAAC;IAEM,6BAAO,GAAd,UAAe,IAAmB;QAC9B,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClD,IAAI,KAAK,EAAE;YACP,IAAI;YACJ,IAAI;gBACA,IAAI,IAAI,GAAG,KAAK,CAAC;gBACjB,IAAI,MAAM,GAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC3C,IAAI,MAAM,CAAC,IAAI,EAAE;oBACb,OAAO,MAAM,CAAC,KAAK,CAAC;iBACvB;qBAAM;oBACH,OAAO,KAAK,CAAC;iBAChB;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,KAAK,CAAC;aAChB;SACJ;aACI;YACD,OAAO,0BAAW,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAChD;IACL,CAAC;IAEM,6BAAO,GAAd,UAAe,IAAmB,EAAE,KAAyC;QAEzE,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;QACxB,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,QAAQ,EAAE;YAC/E,IAAI,OAAO,GAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;YACxD,IAAI;YACJ,IAAI;gBACA,IAAI,IAAI,GAAG,OAAO,CAAC;gBACnB,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aAC/D;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,QAAQ;oBAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACjC;SACJ;aAAM;YACH,IAAI,QAAQ;gBAAE,EAAE,CAAC,KAAK,CAAC,wGAAsB,IAAM,CAAC,CAAC;SACxD;IACL,CAAC;IAEM,gCAAU,GAAjB,UAAkB,IAAmB;QACjC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,CAAC;IAEM,mCAAa,GAApB;QACI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,CAAA;IAC/B,CAAC;IApEc,qBAAS,GAAgB,IAAI,CAAC;IAsEjD,kBAAC;CAvED,AAuEC,IAAA;AAvEY,kCAAW","file":"","sourceRoot":"/","sourcesContent":["\r\n/**\r\n * @description 本地数据存储，为了后面可能需要对数据进入加密保存等，把cocos的封闭一层\r\n */\r\n\r\n\r\nimport { objectUtils } from \"../utils/object-utils\";\r\nimport { Save, SaveItemConig } from \"./Save\";\r\n\r\ntype StorageVauleType = \"number\" | \"string\" | \"boolean\" | \"object\";\r\ninterface StorageData {\r\n    type: StorageVauleType,\r\n    value: string | number | boolean | object;\r\n\r\n}\r\nexport class SaveManager {\r\n    private static _instance: SaveManager = null;\r\n    public static Instance() { return this._instance || (this._instance = new SaveManager()); }\r\n\r\n    public init() {\r\n        //每日刷新\r\n        let date = new Date()\r\n        let text = parseInt((date.getMonth() + 1) + \"\" + date.getDay() + \"\")\r\n        if (this.getItem(Save.todayInfo) != text) {\r\n            // for (let m in Save) {\r\n            //     let item = Save[m]\r\n            //     if (item && item.isDayUpdate) {                    \r\n            //         this.setItem(item, item.default);\r\n            //     }\r\n            // }    \r\n            if (!CC_EDITOR) {\r\n                cc.log(\"每次刷新···································\", text);\r\n                // this.setItem(Save.isPopSignView, 0);\r\n                // this.setItem(Save.taskOkArray, []);\r\n                // this.setItem(Save.todayInfo, text);\r\n                // this.setItem(Save.isShowNewCashOutTip, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    public getItem(item: SaveItemConig) {\r\n        let value = cc.sys.localStorage.getItem(item.key);\r\n        if (value) {\r\n            //解析\r\n            try {\r\n                let data = value;\r\n                let result: StorageData = JSON.parse(data);\r\n                if (result.type) {\r\n                    return result.value;\r\n                } else {\r\n                    return value;\r\n                }\r\n            } catch (error) {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return objectUtils.cloneObject(item.default);\r\n        }\r\n    }\r\n\r\n    public setItem(item: SaveItemConig, value: string | number | boolean | object) {\r\n\r\n        let type = typeof value;\r\n        if (type == \"number\" || type == \"string\" || type == \"boolean\" || type == \"object\") {\r\n            let saveObj: StorageData = { type: type, value: value };\r\n            //加密\r\n            try {\r\n                let data = saveObj;\r\n                cc.sys.localStorage.setItem(item.key, JSON.stringify(data));\r\n            } catch (error) {\r\n                if (CC_DEBUG) cc.error(error);\r\n            }\r\n        } else {\r\n            if (CC_DEBUG) cc.error(`存储数据类型不支持 当前的存储类型: ${type}`);\r\n        }\r\n    }\r\n\r\n    public removeItem(item: SaveItemConig) {\r\n        cc.sys.localStorage.removeItem(item.key);\r\n    }\r\n\r\n    public removeAllItem() {\r\n        cc.sys.localStorage.clear()\r\n    }\r\n\r\n}"]}